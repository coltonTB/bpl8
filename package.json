{
  "name": "serverless-server",
  "version": "1.1.2",
  "description": "",
  "main": "app.js",
  "author": "Colton Brown <coltonTB@me.com> (http://coltontbrown.com/)",
  "license": "ISC",
  "config": {
    "s3BucketName": "rad-web-static",
    "region": "us-west-1",
    "lambdaFunctionName": "radicalMachinesWebserver"
  },
  "dependencies": {
    "aws-sdk": "^2.86.0",
    "aws-serverless-express": "^2.1.3",
    "body-parser": "^1.16.1",
    "cors": "^2.8.1",
    "css-name": "^1.0.0",
    "dotenv": "^4.0.0",
    "dotty": "0.0.2",
    "express": "^4.14.1",
    "express-basic-auth": "^1.1.1",
    "history": "^3.2.0",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "react-jsonschema-form": "^0.49.0",
    "react-router": "^3.0.2",
    "superagent": "^3.5.2"
  },
  "devDependencies": {
    "babel-cli": "^6.23.0",
    "babel-core": "^6.23.1",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.3.2",
    "babel-plugin-inline-json-import": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-2": "^6.22.0",
    "classnames": "^2.2.5",
    "css-loader": "^0.27.2",
    "eslint": "^3.16.1",
    "eslint-plugin-react": "^6.10.0",
    "extract-text-webpack-plugin": "^2.1.0",
    "node-sass": "^4.5.0",
    "null-loader": "^0.1.1",
    "react-svg": "^2.1.19",
    "sass-loader": "^6.0.3",
    "scroll": "^2.0.0",
    "scroll-doc": "^0.1.3",
    "style-loader": "^0.13.2",
    "styled-components": "v2.0.0-10",
    "webpack": "^2.2.1"
  },
  "scripts": {
    "clone-content": "aws s3 cp s3://$npm_package_config_s3BucketName/content/content.json ./content/content.json",
    "clean": "rm -rf dist/* && mkdir dist/static dist/lambda dist/static-pages && cp -r src/images dist/static",
    "build-static-pages": "node ./static-site/generator.js",
    "build-server": "./node_modules/.bin/webpack",
    "upload-static-pages": "aws s3 cp --recursive ./dist/static-pages s3://$npm_package_config_s3BucketName --region $npm_package_config_region --acl public-read --content-type text/html",
    "upload-assets": "aws s3 cp --recursive ./dist/static s3://$npm_package_config_s3BucketName --region $npm_package_config_region --acl public-read",
    "upload-lambda": "aws s3 cp --recursive ./dist/lambda s3://$npm_package_config_s3BucketName/lambda --region $npm_package_config_region --acl private",
    "upload-content": "aws s3 cp --recursive ./content s3://$npm_package_config_s3BucketName/content --region $npm_package_config_region --acl public-read",
    "lambda-zip": "cd dist/lambda && zip -q lambda-function.zip lambda.js server-bundle.js && cd ..",
    "lambda-update": "aws lambda update-function-code --function-name $npm_package_config_lambdaFunctionName --region $npm_package_config_region --s3-bucket $npm_package_config_s3BucketName --s3-key lambda/lambda-function.zip",
    "deploy": "npm run clean && npm run build-server && npm run deploy-lambda && npm run deploy-static && npm run upload-assets && npm run upload-content",
    "deploy-lambda": "cp -r src/lambda.js dist/lambda && npm run lambda-zip && npm run upload-lambda && npm run lambda-update",
    "deploy-static": "npm run build-static-pages && npm run upload-static-pages",
    "deploy-static-fast": "npm run deploy-static && aws s3 cp --recursive ./dist/static/assets s3://$npm_package_config_s3BucketName/assets --region $npm_package_config_region --acl public-read",
    "local": "./node_modules/.bin/nodemon -w ./dist",
    "watch": "npm run clone-content && npm run build-server -- --watch"
  }
}
